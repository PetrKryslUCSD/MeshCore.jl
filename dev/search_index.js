var documenterSearchIndex = {"docs":
[{"location":"man/reference.html","page":"Reference","title":"Reference","text":"CurrentModule = MeshCore","category":"page"},{"location":"man/reference.html#Functions","page":"Reference","title":"Functions","text":"","category":"section"},{"location":"man/reference.html#Shapes-descriptors","page":"Reference","title":"Shapes descriptors","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"manifdim(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}\nnvertices(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}\nnfacets(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}\nnridges(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}\nn1storderv(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}\nnshifts(sd::AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}) where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS} \nnfeatofdim","category":"page"},{"location":"man/reference.html#MeshCore.manifdim-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.manifdim","text":"manifdim(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nWhat is the manifold dimension of this shape?\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nvertices-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.nvertices","text":"nvertices(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nHow many vertices does the shape connect?\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nfacets-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.nfacets","text":"nfacets(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nHow many facets bound the shape?\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nridges-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.nridges","text":"nridges(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nHow many ridges bound the shape?\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.n1storderv-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.n1storderv","text":"n1storderv(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nHow many 1st-order vertices are there per shape?\n\nFor instance, for hexahedra each shape has 8 1st-order vertices.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nshifts-Union{Tuple{MeshCore.AbsShapeDesc{MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}}, Tuple{NSHIFTS}, Tuple{NFOV}, Tuple{RD}, Tuple{NR}, Tuple{FD}, Tuple{NF}, Tuple{NV}, Tuple{MD}} where {MD, NV, NF, FD, NR, RD, NFOV, NSHIFTS}","page":"Reference","title":"MeshCore.nshifts","text":"nshifts(sd::AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}) where {MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nHow many circular shifts should be tried to figure out the orientation (sense)?\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nfeatofdim","page":"Reference","title":"MeshCore.nfeatofdim","text":"nfeatofdim(sd::SD, m) where {SD<:AbsShapeDesc}\n\nCompute number of manifold features of given dimension.\n\nFor instance, a tetrahedron with four vertices has 1 feature of manifold dimension 3, four features of manifold dimension 2, six features of manifold dimension 1, and four features of manifold dimension 0.\n\nQuadratic or higher order elements may have more vertices than would correspond to the hierarchy of cells, facets, ridges. Internal vertices must be accounted for as well. For instance, L3 has two facets, but three vertices. T6 has three facets, three ridges, but six vertices.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Shapes","page":"Reference","title":"Shapes","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ShapeColl(shapedesc::S, nshapes::Int64) where {S <: AbsShapeDesc}\nShapeColl(shapedesc::S, nshapes::Int64, s::String) where {S <: AbsShapeDesc}\nshapedesc\nnshapes\nmanifdim(shapes::ShapeColl)\nnvertices(shapes::ShapeColl) \nfacetdesc\nnfacets(shapes::ShapeColl)\nfacetconnectivity\nridgedesc\nnridges(shapes::ShapeColl)\nridgeconnectivity\nattribute","category":"page"},{"location":"man/reference.html#MeshCore.ShapeColl-Union{Tuple{S}, Tuple{S, Int64}} where S<:MeshCore.AbsShapeDesc","page":"Reference","title":"MeshCore.ShapeColl","text":"ShapeColl(shapedesc::S, nshapes::Int64) where {S<:AbsShapeDesc}\n\nSet up new shape collection with an empty dictionary of attributes and a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.ShapeColl-Union{Tuple{S}, Tuple{S, Int64, String}} where S<:MeshCore.AbsShapeDesc","page":"Reference","title":"MeshCore.ShapeColl","text":"ShapeColl(shapedesc::S, nshapes::Int64, s::String) where {S<:AbsShapeDesc}\n\nSet up new shape collection with an empty dictionary of attributes.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.shapedesc","page":"Reference","title":"MeshCore.shapedesc","text":"shapedesc(shapes::ShapeColl)\n\nRetrieve the shape descriptor.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.nshapes","page":"Reference","title":"MeshCore.nshapes","text":"nshapes(shapes::ShapeColl)\n\nNumber of shapes in the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.manifdim-Tuple{MeshCore.ShapeColl}","page":"Reference","title":"MeshCore.manifdim","text":"manifdim(shapes::ShapeColl)\n\nRetrieve the manifold dimension of the collection.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.nvertices-Tuple{MeshCore.ShapeColl}","page":"Reference","title":"MeshCore.nvertices","text":"nvertices(shapes::ShapeColl)\n\nRetrieve the number of vertices per shape.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.facetdesc","page":"Reference","title":"MeshCore.facetdesc","text":"facetdesc(shapes::ShapeColl)\n\nRetrieve the shape type of the boundary facet.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.nfacets-Tuple{MeshCore.ShapeColl}","page":"Reference","title":"MeshCore.nfacets","text":"nfacets(shapes::ShapeColl)\n\nRetrieve the number of boundary facets per shape.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.facetconnectivity","page":"Reference","title":"MeshCore.facetconnectivity","text":"facetconnectivity(shapes::ShapeColl, j::Int64)\n\nRetrieve connectivity of the j-th facet shape of the i-th shape from the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.ridgedesc","page":"Reference","title":"MeshCore.ridgedesc","text":"ridgedesc(shapes::ShapeColl)\n\nRetrieve the shape type of the boundary ridge.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.nridges-Tuple{MeshCore.ShapeColl}","page":"Reference","title":"MeshCore.nridges","text":"nridges(shapes::ShapeColl)\n\nRetrieve the number of boundary ridges per shape.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.ridgeconnectivity","page":"Reference","title":"MeshCore.ridgeconnectivity","text":"ridgeconnectivity(shapes::ShapeColl, j::Int64)\n\nRetrieve connectivity of the j-th ridge shape of the i-th shape from the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.attribute","page":"Reference","title":"MeshCore.attribute","text":"attribute(shapes::ShapeColl, s::Symbol)\n\nRetrieve a named attribute.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Incidence-relations","page":"Reference","title":"Incidence relations","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"IncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, v::Vector{T}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\nIncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, v::Vector{T}, name::String) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\nIncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, data::Matrix{MT}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\nIncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, data::Matrix{MT}, name::String) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\nindextype\nnrelations\nnentities\nir_code","category":"page"},{"location":"man/reference.html#MeshCore.IncRel-Union{Tuple{MT}, Tuple{RIGHT}, Tuple{LEFT}, Tuple{MeshCore.ShapeColl{LEFT}, MeshCore.ShapeColl{RIGHT}, Matrix{MT}}} where {LEFT<:MeshCore.AbsShapeDesc, RIGHT<:MeshCore.AbsShapeDesc, MT}","page":"Reference","title":"MeshCore.IncRel","text":"IncRel(\n    left::ShapeColl{LEFT},\n    right::ShapeColl{RIGHT},\n    data::Matrix{MT}\n) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\n\nConvenience constructor supplying a matrix and a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.IncRel-Union{Tuple{MT}, Tuple{RIGHT}, Tuple{LEFT}, Tuple{MeshCore.ShapeColl{LEFT}, MeshCore.ShapeColl{RIGHT}, Matrix{MT}, String}} where {LEFT<:MeshCore.AbsShapeDesc, RIGHT<:MeshCore.AbsShapeDesc, MT}","page":"Reference","title":"MeshCore.IncRel","text":"IncRel(\n    left::ShapeColl{LEFT},\n    right::ShapeColl{RIGHT},\n    data::Matrix{MT},\n    name::String\n) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\n\nConvenience constructor supplying a matrix and a name.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#MeshCore.indextype","page":"Reference","title":"MeshCore.indextype","text":"indextype(ir::IncRel)\n\nProvide type of the incidence index (entity number). Presumably some type of integer.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.nrelations","page":"Reference","title":"MeshCore.nrelations","text":"nrelations(ir::IncRel)\n\nNumber of individual relations in the incidence relation.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.nentities","page":"Reference","title":"MeshCore.nentities","text":"nentities(ir::IncRel, j::IT) where {IT}\n\nNumber of individual entities in the j-th relation in the incidence relation.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.ir_code","page":"Reference","title":"MeshCore.ir_code","text":"code(ir::IncRel{LEFT,RIGHT,T}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\n\nFormulate the code of the incidence relation.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Relations-below-the-diagonal","page":"Reference","title":"Relations below the diagonal","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ir_skeleton\nir_bbyfacets\nir_bbyridges","category":"page"},{"location":"man/reference.html#MeshCore.ir_skeleton","page":"Reference","title":"MeshCore.ir_skeleton","text":"ir_skeleton(ir::IncRel, name = \"skt\")\n\nCompute the \"skeleton\" of an incidence relation.\n\nCompute a new incidence relation from an existing incidence relation to extract the skeleton.\n\nReturns\n\nIncidence relation for the skeleton of the input incidence relation. The left shape collection consists of facets (shapes of manifold dimension one less than the manifold dimension of the shapes themselves). The right shape collection is the same as for the input.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.ir_bbyfacets","page":"Reference","title":"MeshCore.ir_bbyfacets","text":"ir_bbyfacets(ir::IncRel, fir::IncRel, tfir::IncRel, name = \"bbf\")\n\nCompute the \"bounded by facets\" incidence relation (d, d-1) for d-dimensional shapes.\n\nIn other words, this is the incidence relation between shapes and the shapes that bound these shapes (facets). For tetrahedra as the shapes, the incidence relation lists the numbers of the faces that bound each individual tetrahedron. The resulting left shape is of the same shape description as in the ir.\n\nArguments\n\nir = incidence relation (d, 0),\nfir = incidence relation (d-1, 0),\ntfir = transpose of the above, incidence relation (0, d-1).\n\nReturns\n\nIncidence relation for the bounded-by relationship between shape collections. The left shape collection is the same as for the ir, the right shape collection is for the facets (shapes of manifold dimension one less than the manifold dimension of the shapes themselves).\n\nnote: Note\nThe numbers of the facets are signed: positive when the facet bounds the shape in the sense in which it is defined by the shape as oriented with an outer normal; negative otherwise. The sense is defined by the numbering of the 1st-order vertices of the facet shape.\n\n\n\n\n\nir_bbyfacets(ir::IncRel, fir::IncRel, name = \"bbf\")\n\nCompute the \"bounded by facets\" incidence relation (d, d-1) for d-dimensional shapes.\n\nConvenience function where the transpose of the incidence relation fir is computed on the fly.\n\nSee also: ir_bbyfacets(ir::IncRel, fir::IncRel, tfir::IncRel)\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.ir_bbyridges","page":"Reference","title":"MeshCore.ir_bbyridges","text":"ir_bbyridges(ir::IncRel, eir::IncRel, teir::IncRel, name = \"bbr\")\n\nCompute the \"bounded by ridges\" incidence relation (d, d-2) for d-dimensional shapes.\n\nIn other words, this is the incidence between shapes and the shapes that \"bound\" the boundaries of these shapes (i. e. ridges). For tetrahedra as the shapes, the incidence relation lists the numbers of the edges that \"bound\" each individual tetrahedron. The resulting shape is of the same shape description as the shapes on input.\n\nReturns\n\nThe incidence relation for the \"bounded by\" relationship between shape collections. The left shape collection is the same as for the ir, the right shape collection is for the ridges (shapes of manifold dimension two less than the manifold dimension of the shapes themselves).\n\nnote: Note\nThe numbers of the ridges are signed: positive when the ridge bounds the shape in the sense in which it is defined by the shape as oriented with an outer normal; negative otherwise. The sense is defined by the numbering of the 1st-order vertices of the ridge shape.\n\n\n\n\n\nir_bbyridges(ir::IncRel, eir::IncRel, name = \"bbr\")\n\nCompute the \"bounded-by-ridges\" incidence relation (d, d-2).\n\nConvenience function where the transpose of the incidence relation on the right is computed on the fly.\n\nSee also: ir_bbyridges(ir::IncRel, eir::IncRel, efir::IncRel)\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Relations-above-the-diagonal","page":"Reference","title":"Relations above the diagonal","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ir_transpose(mesh::IncRel)","category":"page"},{"location":"man/reference.html#MeshCore.ir_transpose-Tuple{MeshCore.IncRel}","page":"Reference","title":"MeshCore.ir_transpose","text":"ir_transpose(ir::IncRel, name = \"trp\")\n\nCompute the \"transposed\" incidence relation (d1, d2), where d2 >= d1.\n\nThis only makes sense for d2 >= 0. For d2=1 we get for each vertex the list of edges connected to the vertex, and analogously faces and cells for d=2 and d=3.\n\nReturns\n\nIncidence relation for the transposed incidence relation. The left and right shape collection are swapped in the output relative to the input.\n\n\n\n\n\n","category":"method"},{"location":"man/reference.html#Relations-on-the-diagonal","page":"Reference","title":"Relations on the diagonal","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ir_identity(ir::IncRel, side = :left)","category":"page"},{"location":"man/reference.html#MeshCore.ir_identity","page":"Reference","title":"MeshCore.ir_identity","text":"ir_identity(ir::IncRel, side = :left)\n\nCompute the \"identity\" incidence relation (d, d).\n\nEither the left (side = :left) or the right (side = :right) shape is mapped to itself.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Utilities","page":"Reference","title":"Utilities","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ir_subset\nir_boundary","category":"page"},{"location":"man/reference.html#MeshCore.ir_subset","page":"Reference","title":"MeshCore.ir_subset","text":"ir_subset(ir::IncRel, list)\n\nCompute the incidence relation representing a subset of the shape collection on the left.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#MeshCore.ir_boundary","page":"Reference","title":"MeshCore.ir_boundary","text":"ir_boundary(ir::IncRel, name = \"bdr\")\n\nCompute the incidence relation for the boundary of the incidence relation on input.\n\nThe skeleton function.\n\n\n\n\n\n","category":"function"},{"location":"man/reference.html#Index-of-functions","page":"Reference","title":"Index of functions","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"","category":"page"},{"location":"man/reference.html#Types","page":"Reference","title":"Types","text":"","category":"section"},{"location":"man/reference.html#Shape-descriptors","page":"Reference","title":"Shape descriptors","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"AbsShapeDesc\nNoSuchShapeDesc\nP1ShapeDesc\nL2ShapeDesc\nL3ShapeDesc\nQ4ShapeDesc\nQ8ShapeDesc\nH8ShapeDesc\nT3ShapeDesc\nT6ShapeDesc\nT4ShapeDesc\nSHAPE_DESC","category":"page"},{"location":"man/reference.html#MeshCore.AbsShapeDesc","page":"Reference","title":"MeshCore.AbsShapeDesc","text":"AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nAbstract shape descriptor (simplex, or cuboid, of various manifold dimension)\n\nThe definitions of concrete types below define a set of shape descriptors, covering the usual element shapes: point, line segment, quadrilateral, hexahedron, and a similar hierarchy for the simplex elements: point, line segment, triangle, tetrahedron.\n\nThe concrete types of the shape descriptor will provide access to the following properties of the shape S:\n\nmanifdim = manifold dimension of the shape S (i. e. 0, 1, 2, or 3),\nnvertices = number of vertices of the shape S,\nn1storderv = number of first-order vertices for the shape S, for instance   a 6-node triangle has 3 first-order vertices,\nnfacets = number of shapes on the boundary of the shape S,\nfacetdesc = shape descriptor of the shapes on the boundary of the shape S,\nfacets = definitions of the shapes on the boundary of the shape S in terms   of local connectivity\nridgedesc = shape descriptor of the shapes on the boundary of the boundary   of the shape S (which we call ridges here),\nridges = definitions of the shapes on the boundary of the boundary of the   shape S in terms of local connectivity\n\nThe bit-type values are defined with the type parameters:\n\nMD is the manifold dimension,\nNV is the number of connected vertices,\nNF is the number of boundary facets,\nFD is the descriptor of the facet (boundary shape).\nNR is the number of boundary ridges,\nRD is the descriptor of the ridge (boundary shape).\nNFOV is number of first-order vertices,\nNSHIFTS is the number of shifts that should be attempted when matching   shapes to determine orientation.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.NoSuchShapeDesc","page":"Reference","title":"MeshCore.NoSuchShapeDesc","text":"NoSuchShapeDesc\n\nBase descriptor: no shape is of this description.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.P1ShapeDesc","page":"Reference","title":"MeshCore.P1ShapeDesc","text":"P1ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a point shape.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.L2ShapeDesc","page":"Reference","title":"MeshCore.L2ShapeDesc","text":"L2ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a line segment shape.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.L3ShapeDesc","page":"Reference","title":"MeshCore.L3ShapeDesc","text":"L3ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a quadratic line segment shape.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.Q4ShapeDesc","page":"Reference","title":"MeshCore.Q4ShapeDesc","text":"Q4ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a quadrilateral shape.\n\nFacets: First the two orthogonal to xi, then the two orthogonal to eta. The coordinate along the edge increases.\n\nRidges: Counterclockwise.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.Q8ShapeDesc","page":"Reference","title":"MeshCore.Q8ShapeDesc","text":"Q8ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a quadrilateral shape.\n\nFacets: First the two orthogonal to xi, then the two orthogonal to eta. The coordinate along the edge increases.\n\nRidges: Counterclockwise.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.H8ShapeDesc","page":"Reference","title":"MeshCore.H8ShapeDesc","text":"H8ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a hexahedral shape.\n\nFacets: First the two faces orthogonal to xi, then the two orthogonal to eta, finally the two orthogonal to zeta. The vertices are given counterclockwise when looking from the outside.\n\nRidges: First the four edges parallel to xi, then the four parallel to eta, and finally the four parallel to zeta.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.T3ShapeDesc","page":"Reference","title":"MeshCore.T3ShapeDesc","text":"T3ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a triangular shape.\n\nFacets: We start with the edge opposite to vertex 1, then the edge opposite to vertex 2 and so on. The vertices define counterclockwise orientation.\n\nRidges: The vertices in counterclockwise order.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.T6ShapeDesc","page":"Reference","title":"MeshCore.T6ShapeDesc","text":"T6ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a quadratic triangular shape.\n\nFacets: We start with the edge opposite to vertex 1, then the edge opposite to vertex 2 and so on. The vertices define counterclockwise orientation.\n\nRidges: The vertices in counterclockwise order.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.T4ShapeDesc","page":"Reference","title":"MeshCore.T4ShapeDesc","text":"T4ShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS} <: AbsShapeDesc{MD,NV,NF,FD,NR,RD,NFOV,NSHIFTS}\n\nShape descriptor of a tetrahedral shape.\n\nFacets: We start with the face opposite to vertex 1, then the face opposite to vertex 2 and so on. The vertices define counterclockwise orientation when viewed from outside of the shape.\n\nRidges: The vertices of the edges are defined in the order based on the right-hand side rotation rule: rotate about an edge (ridge) as if it was a rotation vector  with positive orientation. The vertices on the edge opposite across the tetrahedron are traversed in the order given by the rotation.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.SHAPE_DESC","page":"Reference","title":"MeshCore.SHAPE_DESC","text":"SHAPE_DESC\n\nDictionary of all the descriptors.\n\n\n\n\n\n","category":"constant"},{"location":"man/reference.html#Shape-collections","page":"Reference","title":"Shape collections","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"ShapeColl{S <: AbsShapeDesc}","category":"page"},{"location":"man/reference.html#MeshCore.ShapeColl","page":"Reference","title":"MeshCore.ShapeColl","text":"ShapeColl{S<:AbsShapeDesc}\n\nThis is the type of a homogeneous collection of finite element shapes.\n\nS = shape descriptor: subtype of AbsShapeDesc.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#Attributes","page":"Reference","title":"Attributes","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"AbsAttrib{T}\nVecAttrib{T}","category":"page"},{"location":"man/reference.html#MeshCore.AbsAttrib","page":"Reference","title":"MeshCore.AbsAttrib","text":"AbsAttrib{T} <: AbstractArray{T,1}\n\nAbstract type of attribute. It is a subtype of AbstractArray.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#MeshCore.VecAttrib","page":"Reference","title":"MeshCore.VecAttrib","text":"VecAttrib{T} <: AbsAttrib{T}\n\nAttribute stores a quantity of type T, one value per shape. The value is indexed to the serial number of the object.\n\nExample\n\nAttribute to allow access to the locations of the vertices.\n\nusing Test\nusing StaticArrays\nusing MeshCore: VecAttrib, ShapeColl, P1, attribute\nxyz = [0.0 0.0; 633.3333333333334 0.0; 1266.6666666666667 0.0]\nN, T = size(xyz, 2), eltype(xyz)\nlocs =  VecAttrib([SVector{N,T}(xyz[i, :]) for i in 1:size(xyz, 1)])\nvertices = ShapeColl(P1, size(xyz, 1))\nvertices.attributes[\"geom\"] = locs\na = attribute(vertices, \"geom\")\n@test a[2] == [633.3333333333334, 0.0]\n\nAttribute to label the vertices.\n\nusing Test\nusing StaticArrays\nusing MeshCore: VecAttrib, ShapeColl, P1, attribute\na = VecAttrib([1 for i in 1:size(xyz, 1)])\nvertices = ShapeColl(P1, size(xyz, 1))\nvertices.attributes[\"label\"] = a\n@test a[3] == 1\n\nThe vector attribute supports the methods size, getindex, setindex!.\n\n\n\n\n\n","category":"type"},{"location":"man/reference.html#Incidence-relations-2","page":"Reference","title":"Incidence relations","text":"","category":"section"},{"location":"man/reference.html","page":"Reference","title":"Reference","text":"IncRel{LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}","category":"page"},{"location":"man/reference.html#MeshCore.IncRel","page":"Reference","title":"MeshCore.IncRel","text":"IncRel{LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\n\nIncidence relation expressing connectivity between an entity of the shape on the left and a list of entities of the shape on the right.\n\nThe incidence relation may be referred to by its code: (d1, d2), where d1 is the manifold dimension of the shape collection on the left, and d2 is the manifold dimension of the shape collection on the right.\n\nMain operations referred to with the abbreviations used in the paper:\n\nskt = ir_skeleton\ntrp = ir_transpose\nbbf = ir_bbyfacets\nbbr = ir_bbyridges\nidt = ir_identity\n\nAccess to the incidence relation data is through indexing: For instance\n\nir[55]\n\nprovides access to the entire incidence relation ir of the entity 55. The first component of this incidence relation for the entity 55 is\n\nir[55][1]\n\nor equivalently\n\nir[55, 1]\n\n\n\n\n\n","category":"type"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The paper describing the library was accepted for publication in advances in engineering software in April 2021. The final draft is available as PDF in the documents folder of the repository.","category":"page"},{"location":"concepts/concepts.html#Glossary","page":"Concepts","title":"Glossary","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Incidence relation: Map from one shape collection to another shape collection. For instance, three-dimensional finite elements (cells) are typically linked to the vertices by the incidence relation (30), i. e. for each tetrahedron the four vertices are listed. Some incidence relations link a shape to a fixed number of other shapes, other incidence relations are of variable arity. This is what is usually understood as a \"mesh\".\nShape: topological shape of any manifold dimension, 0 for vertices, 1 for edges, 2 for faces, and 3 for cells.\nShape descriptor: description of the type of the shape, such as the number of vertices, facets, ridges, and so on.\nShape collection: set of shapes of a particular shape description.\nFacet: shape bounding another shape. A shape is bounded by facets.\nRidge: shape one manifold dimension lower than the facet. For instance a tetrahedron is bounded by facets, which in turn are bounded by edges. These edges are the \"ridges\" of the tetrahedron.  The ridges can also be thought of as a \"leaky\" bounding shapes of 3-D cells.\nMesh topology: The mesh topology can be understood as an incidence relation between two shape collections.\nIncidence relation operations: The operations defined in the library are the skeleton, the transpose, the bounded-by for facets, and bounded-by for ridges, identity, subset.","category":"page"},{"location":"concepts/concepts.html#Example","page":"Concepts","title":"Example","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Please refer to the MeshTutor.jl package for a tutorial on the use of the library.","category":"page"},{"location":"concepts/concepts.html#Basic-objects","page":"Concepts","title":"Basic objects","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The objects with which the library works are the incidence relations (IncRel), the shape descriptors (subtypes of AbstractShapeDesc), and the shape collections (ShapeColl).","category":"page"},{"location":"concepts/concepts.html#Geometry","page":"Concepts","title":"Geometry","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The locations are points in space. They are defined as attributes for the vertices.","category":"page"},{"location":"concepts/concepts.html#Shape-descriptors-and-shape-collections","page":"Concepts","title":"Shape descriptors and shape collections","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The shape collections are homogeneous collections of  shapes such as the usual vertices (0-dimensional manifolds), line segments (1-dimensional manifolds), triangles and quadrilaterals (2-dimensional manifolds), tetrahedra and hexahedra (3-dimensional manifolds). The shape descriptors describe the topology of one entity of the shape.","category":"page"},{"location":"concepts/concepts.html#Incidence-relations","page":"Concepts","title":"Incidence relations","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The incidence relations are really definitions of meshes where one shape collection, the one on the left of the incidence relation, is mapped to N entities in the shape collection on the right.","category":"page"},{"location":"concepts/concepts.html#Topology-of-meshes","page":"Concepts","title":"Topology of meshes","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Meshes are understood here simply as incidence relations. For instance, at the simplest level, meshes are defined by the connectivity. The connectivity is the incidence relation linking the shape (d-dimensional manifold, where d ge 0) to the set of vertices.  The number of vertices connected by the shapes is a fixed number, for instance 4 for linear tetrahedra.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The collection of d-dimensional shapes is thus defined by the connectivity (d0). The starting point for the processing of  the mesh is typically a two-dimensional or three-dimensional mesh. Let us say we start with a three dimensional mesh, so the basic data structure consists of the incidence relation (30). The incidence relation (20) can be derived by application of the method skeleton. Repeated application of the skeleton method will yield the relation (10), and finally (00). Note that at difference to other definitions of the incidence relation (00) (Logg 2008) this relation is one-to-one, not one-to-many.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The table below shows the incidence relations (connectivity) that are the basic information for generated or imported meshes. For instance a surface mesh composed of triangles will start from the incidence relation 2 rightarrow 0. No other incidence relation from the table will exist at that point.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 (00) ––– ––– –––\n1 (10) ––– ––– –––\n2 (20) ––– ––– –––\n3 (30) ––– ––– –––","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The relation (00) is trivial: Vertex is incident upon itself. Hence it may not be worthwhile  to actually create a shape collection for this relation. It is included for completeness only, really.","category":"page"},{"location":"concepts/concepts.html#Derived-Incidence-Relations","page":"Concepts","title":"Derived Incidence Relations","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The incidence relations computable with the library are summarized in the table below. They include the initial incidence relation  in the first column of the table (connectivity of the first mesh), and the subsequently available incidence relations in the rest of the table. Some of these relations are defined for meshes derived from the initial mesh.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 (00) (01) (02) (03)\n1 (10) (11) (12) (13)\n2 (20) (21) (22) (23)\n3 (30) (31) (32) (33)","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"In general the relations below the diagonal require the calculation of derived meshes. The relations above the diagonal are obtained by the so-called \"transpose\" operation, and do not require the construction of new meshes. Also, the relations below the diagonal are of fixed size. That is the number of entities incident on a given entity is a fixed number that can be determined beforehand. An example is  the relation (32), where for the j-th cell the list consists of the faces bounding the cell. The number of  faces bounding a given cell is fixed (unchanging with the mesh).","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"On the other hand, the relations above the diagonal are in general of variable length. For example the relation (23) represents the cells which are bounded by a face: so either 2 or 1 cells.","category":"page"},{"location":"concepts/concepts.html#Incidence-relations-(d,0)","page":"Concepts","title":"Incidence relations (d0)","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The table below summarizes the incidence relations that represent  the initial meshes.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 (00) ––– ––– –––\n1 (10) ––– ––– –––\n2 (20) ––– ––– –––\n3 (30) ––– ––– –––","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"For instance, for a surface mesh the relation (20) is defined initially. The relations above that can be calculated with the skeleton function. So,  the skeleton of the surface mesh ^would consist of all the edges in the mesh, expressible as the incidence relation  (10).","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Note that the skeleton function constructs a derived mesh: the incidence relations in the column of the above table are therefore defined for related, but separate, meshes.","category":"page"},{"location":"concepts/concepts.html#Incidence-relations-(d,d-1)","page":"Concepts","title":"Incidence relations (dd-1)","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"This incidence relation provides for each shape the list of shapes by which the shape is bounded of manifold dimension lower by one. For example, for each triangular face (manifold dimension 2), the relationship would state the global numbers of edges (manifold dimension 1) by which the triangle face is bounded.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 ––– ––– ––– –––\n1 (10) ––– ––– –––\n2 ––– (21) ––– –––\n3 ––– ––– (32) –––","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The incidence  relation (dd-1) may be derived with the function ir_bbyfacets, which operates on two shape collections: the shapes of dimension d and the facet shapes of dimension d-1.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The relationship (1 0) can be derived in two ways: from the incidence relation (20) by the skeleton function, or by the ir_bbyfacets function applied to a shape collection of edges and  a shape collection of the vertices (21).","category":"page"},{"location":"concepts/concepts.html#Incidence-relations-(d,d-2)","page":"Concepts","title":"Incidence relations (dd-2)","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"This incidence relation provides for each shape the list of shapes by which the shape is \"bounded\" of manifold dimension lower by two. For example, for each triangular face (manifold dimension 2), the relationship would state the global numbers of vertices (manifold dimension 0) by which the triangle face is \"bounded\". The word \"bounded\" is in quotes because the relationship of bounding is very leaky: Clearly we do not cover most of the boundary, only the vertices.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Similar relationship can be derived for instance between tetrahedra and the edges (31). Again, the incidence relation is very leaky in that it provides cover for the edges of the tetrahedron.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 ––– ––– ––– –––\n1 ––– ––– ––– –––\n2 (20) ––– ––– –––\n3 ––– (31) ––– –––","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The relationship (2 0) can be derived in two ways: from the incidence relation (3 0) by the skeleton function, or by the ir_bbyridges function applied to a shape collection of cells and  a shape collection of the edges.","category":"page"},{"location":"concepts/concepts.html#Incidence-relations-(d_1,d_2),-where-d_1-\\lt-d_2","page":"Concepts","title":"Incidence relations (d_1d_2), where d_1 lt d_2","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The relations above the diagonal of the table below are lists of shapes incident on lower-dimension shapes. These are computed from the incidence relations from the lower triangle of the table by the function ir_transpose.","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 ––– (01) (02) (03)\n1 ––– ––– (12) (13)\n2 ––– ––– ––– (23)\n3 ––– ––– ––– –––","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"The incidence relations in the upper triangle of the table are all of variable arity: for instance the incidence relation (13) is the list of three-dimensional cells that share a given edge. Clearly the number of cells varies from edge to edge.","category":"page"},{"location":"concepts/concepts.html#Incidence-relations-(d,d),-where-d-\\gt-1","page":"Concepts","title":"Incidence relations (dd), where d gt 1","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"These incidence relations are mostly useful for uniformity to record an identity relation: an entity is mapped to itself. The operation is denoted here idt((dd)).","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"This defers starkly from the definitions of such relations that can be found in the literature.  Those are one-to-many, and don't fit the table above. They need to refer to a connecting shape. For instance, the relationship between faces,   (22), would need to state through which shape the incidence occured: was it through the common vertex? Was it through a common edge? Similarly, for cells the incidence relationship (33) would be different for the incidences that followed from a common vertex, a common edge, or a common face.","category":"page"},{"location":"concepts/concepts.html#How-incidence-relations-are-computed","page":"Concepts","title":"How incidence relations are computed","text":"","category":"section"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"For definiteness here we assume that the initial mesh (i. e. the incidence relation) is 30. The other 12 relations in the table below can be computed by applying the four procedures: skeleton (skt), bounded-by-facet (bbf), bounded-by-ridges (bbr), and transpose (trp). In addition there is the identity-producing operation (idt).","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"Manif. dim. 0 1 2 3\n0 skt((10)) trp((10)) trp((20)) trp((30))\n1 skt((20)) idt((11)) trp((21)) trp((31))\n2 skt((30)) bbf((20), (10), (01)) idt((22)) trp((32))\n3 (30) bbr((30), (10), (01)) bbf((30), (20), (02)) idt((33))","category":"page"},{"location":"concepts/concepts.html","page":"Concepts","title":"Concepts","text":"In addition, there is the subset and boundary computation (ir_subset, ir_boundary).","category":"page"},{"location":"guide/guide.html#How-to-guide","page":"How to guide","title":"How-to guide","text":"","category":"section"},{"location":"guide/guide.html#How-to-create-a-shape-collection","page":"How to guide","title":"How to create a shape collection","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"A shape collection of 6 quadrilaterals may be created as:","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: Q4, ShapeColl\nq4s = ShapeColl(Q4, 6)","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Here Q4 is the shape descriptor of 4-node quadrilaterals.","category":"page"},{"location":"guide/guide.html#How-to-create-an-incidence-relation","page":"How to guide","title":"How to create an incidence relation","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"A incidence relation of 6 quadrilaterals that connect vertices (nodes) given in the vector of tuples c may be created as: First we create the shape collections for the quadrilaterals and the vertices. ","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: P1, Q4, ShapeColl\nq4s = ShapeColl(Q4, 6)\nvrts = ShapeColl(P1, 12)","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Here P1 is the shape descriptor of a single point.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Then we supply the data for the connectivity:","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"c = [(1, 2, 6, 5), (5, 6, 10, 9), (2, 3, 7, 6), (6, 7, 11, 10), (3, 4, 8, 7), (7, 8, 12, 11)]\nusing MeshCore: IncRel\nir = IncRel(q4s, vrts, c)","category":"page"},{"location":"guide/guide.html#How-to-inspect-an-incidence-relation","page":"How to guide","title":"How to inspect an incidence relation","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Given an incidence relation ir, a summary of it may be printed as ","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"summary(ir) ","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The two shape collections, the one on the left and the one on the right of the incidence relation, may be summarized as:","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"summary(ir.left), summary(ir.right)  ","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The number of the shapes in the two collections may be obtained as","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: nshapes\nnshapes(ir.left), nshapes(ir.right)  ","category":"page"},{"location":"guide/guide.html#How-to-inspect-a-shape-descriptor","page":"How to guide","title":"How to inspect a shape descriptor","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"In the incidence relation from above (quadrilaterals versus vertices), the quadrilaterals are the shape collection on the left of the incidence relation, and the vertices are there shape collection on the right. The manifold dimension of the vertices is 0.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"vrts = ir.right\nusing MeshCore: shapedesc\nsd = shapedesc(vrts)\nusing MeshCore: manifdim\nmanifdim(vrts) == manifdim(P1)  == manifdim(sd)  == 0","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The quadrilaterals are the shape collection on the left.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"quads = ir.left","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The facets of the quadrilaterals are line segments (shape descriptor L2) .","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: facetdesc, L2\nfacetdesc(quads) == L2","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Each quadrilateral has 4 facets.","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: nfacets, Q4\nnfacets(quads) == nfacets(Q4) == 4","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The ridges of the quadrilaterals are the vertices:","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"using MeshCore: ridgedesc, nridges, P1\nridgedesc(quads) == P1\nnridges(quads) == 4","category":"page"},{"location":"guide/guide.html#How-to-attach-the-geometry-attribute","page":"How to guide","title":"How to attach the geometry attribute","text":"","category":"section"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"Here is a small tetrahedral mesh defined by the connectivity conn. ","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"c = [ [1, 10, 7, 8], \n [5, 4, 2, 11], \n [11, 2, 8, 10],\n [4, 11, 10, 2],\n [2, 1, 8, 10], \n [4, 10, 1, 2], \n [2, 11, 8, 9], \n [6, 5, 3, 12], \n [12, 3, 9, 11],\n [5, 12, 11, 3],\n [3, 2, 9, 11], \n [5, 11, 2, 3] ]   \nusing MeshCore: T4, P1, ShapeColl\ntets = ShapeColl(T4, size(c, 1))\nvrts = ShapeColl(P1, 12)\nusing MeshCore: IncRel\nconn = IncRel(tets, vrts, c)","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"The locations of the vertices are at this point undefined. To remedy this deficiency, we attach the geometry attribute:","category":"page"},{"location":"guide/guide.html","page":"How to guide","title":"How to guide","text":"xyz = [[0.0, 0.0, 0.0], [1.0, 0.0, 0.0], [2.0, 0.0, 0.0], [0.0, 1.0, 0.0], [1.0, 1.0, 0.0], [2.0, 1.0, 0.0], [0.0, 0.0, 3.0], [1.0, 0.0, 3.0], [2.0, 0.0, 3.0], [0.0, 1.0, 3.0], [1.0, 1.0, 3.0], [2.0, 1.0, 3.0]]\nusing MeshCore:  VecAttrib\nlocs = VecAttrib(xyz)\nvrts.attributes[\"geom\"] = locs","category":"page"},{"location":"guide/guide.html#How-to-generate-a-skeleton","page":"How to guide","title":"How to generate a skeleton","text":"","category":"section"},{"location":"guide/guide.html#How-to-generate-a-transposed-incidence-relation","page":"How to guide","title":"How to generate a transposed incidence relation","text":"","category":"section"},{"location":"index.html#MeshCore-Documentation","page":"Home","title":"MeshCore Documentation","text":"","category":"section"},{"location":"index.html#How-to-guide","page":"Home","title":"How to guide","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Guide to the use of the library.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"guide/guide.md\",\n]\nDepth = 1","category":"page"},{"location":"index.html#Reference-manual","page":"Home","title":"Reference manual","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"The reference description of the types and of the functions.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"man/reference.md\",\n]\nDepth = 1","category":"page"},{"location":"index.html#Concepts","page":"Home","title":"Concepts","text":"","category":"section"},{"location":"index.html","page":"Home","title":"Home","text":"Concepts and design of the library.","category":"page"},{"location":"index.html","page":"Home","title":"Home","text":"Pages = [\n    \"concepts/concepts.md\",\n]\nDepth = 1","category":"page"}]
}
