var documenterSearchIndex = {"docs":
[{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Table of contents","category":"page"},{"location":"guide/guide.html#Guide-1","page":"Guide","title":"Guide","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Contents:","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Glossary\nExample\nBasic objects\nDerived Incidence Relations","category":"page"},{"location":"guide/guide.html#Glossary-1","page":"Guide","title":"Glossary","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Shape: topological shape of any manifold dimension, 0 for vertices, 1 for edges, 2 for faces, and 3 for cells.\nShape descriptor: description of the type of the shape, such as the number of vertices, facets, edgets, and so on.\nShape collection: set of shapes of a particular shape.\nIncidence relation: Map from one shape collection to another shape collection. For instance, three-dimensional finite elements (cells) are typically linked to the vertices by the incidence relation 3 rightarrow 0, i. e. for each tetrahedron the four vertices are listed. Some incidence relations link a shape to a fixed number of other shapes, other incidence relations are of variable arity.\nFacet: shape bounding another shape. A shape is bounded by facets.\nEdget: shape one manifold dimension lower than the facet. For instance a tetrahedron is bounded by facets, which in turn are bounded by edges. These edges are the \"edgets\" of the tetrahedron.  The edgets can also be thought of as a \"leaky\" bounding shapes of 3-D cells.\nMesh topology: The mesh topology can be understood as an incidence relation between two shape collections.\nIncidence relation operations: The operations defined in the library are the skeleton, the transpose, the bounded-by for facets, and bounded-by for edgets.","category":"page"},{"location":"guide/guide.html#Example-1","page":"Guide","title":"Example","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Let us begin with a simple example of the use of the library. (The next step relies on a related package, MeshPorter.) First import the mesh from a file:","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"mesh = import_NASTRAN(\"trunc_cyl_shell_0.nas\")","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The mesh data structure can be now queried as to the incidence relations. The :connectivity is the incidents relation that defines the connectivity of the tetrahedral mesh that was read in:","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"connectivity = increl(mesh, :connectivity)\n@test (nshapes(connectivity.right), nshapes(connectivity.left)) == (376, 996)","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The incidents relation connects the shape collection on the left (tetrahedra), with the shape collection on the right (vertices). We can check that the correct number of entities were imported:","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"@test (nshapes(connectivity.right), nshapes(connectivity.left)) == (376, 996)","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"We can now extract the shape collection of the vertices from the mesh, retrieve the geometry attribute, and pass these quantities to the export function:","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"vertices = shapecoll(mesh, :vertices)\ngeom = attribute(vertices, :geom)\nvtkwrite(\"trunc_cyl_shell_0\", geom.val.locs, connectivity)","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Extract zero-dimensional entities (points) by a triple application of the skeleton function. Check that the number of shapes in the skeleton is equal to the number of the vertices (in this particular skeleton they correspond one-to-one).","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"ir00 = skeleton(skeleton(skeleton(connectivity)))\n@test (nshapes(ir00.right), nshapes(ir00.left)) == (376, 376)","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Export the mesh for visualization (requires the use of the MeshPorter package).","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"vtkwrite(\"trunc_cyl_shell_0-boundary-skeleton\", geom.val.locs, ir00)","category":"page"},{"location":"guide/guide.html#Basic-objects-1","page":"Guide","title":"Basic objects","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The objects with which the library works are the incidence relations (IncRel), the shape descriptors (subtypes of AbstractShapeDesc), and the shape collections (ShapeColl).","category":"page"},{"location":"guide/guide.html#Geometry-1","page":"Guide","title":"Geometry","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The locations are points in space. They are defined for the vertices.","category":"page"},{"location":"guide/guide.html#Shape-descriptors-and-shape-collections-1","page":"Guide","title":"Shape descriptors and shape collections","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The shape collections are homogeneous collections of  shapes such as the usual vertices (0-dimensional manifolds), line segments (1-dimensional manifolds), triangles and quadrilaterals (2-dimensional manifolds), tetrahedra and hexahedra (3-dimensional manifolds). The shape descriptors describe the topology of one entity of the shape.","category":"page"},{"location":"guide/guide.html#Incidence-relations-1","page":"Guide","title":"Incidence relations","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The incidence relations are really definitions of meshes where one shape collection, the one on the left of the incidents relation, is mapped to N entities in the shape collection on the right.","category":"page"},{"location":"guide/guide.html#Topology-of-meshes-1","page":"Guide","title":"Topology of meshes","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Meshes are understood here simply as incidence relations. For instance, at the simplest level meshes are defined by the connectivity. The connectivity is the incidence relation linking the shape (d-dimensional manifold, where d ge 0) to the set of vertices.  The number of vertices connected by the shapes is a fixed number, for instance 4 for linear tetrahedra.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The collection of d-dimensional shapes is thus defined by the connectivity d rightarrow 0. The starting point for the processing of  the mesh is typically a two-dimensional or three-dimensional mesh. Let us say we start with a three dimensional mesh, so the basic data structure consists of the incidence relation 3 rightarrow 0. The incidence relation 2 rightarrow 0 can be derived by application of the method skeleton. Repeated application of the skeleton method will yield the relation 1 rightarrow 0, and finally 0 rightarrow 0. Note that at difference to other definitions of the incidence relation 0 rightarrow 0 (Logg 2008) this relation is one-to-one, not one-to-many.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The table below shows the incidence relations (connectivity) that are the basic information for generated or imported meshes. For instance a surface mesh composed of triangles will start from the incidence relation 2 rightarrow 0. No other incidence relation from the table will exist at that point.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 0 -> 0 ––– ––– –––\n1 1 -> 0 ––– ––– –––\n2 2 -> 0 ––– ––– –––\n3 3 -> 0 ––– ––– –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The relation 0 rightarrow 0 is trivial: Vertex is incident upon itself. Hence it may not be worthwhile  to actually create a shape collection for this relation. It is included for completeness only, really.","category":"page"},{"location":"guide/guide.html#Derived-Incidence-Relations-1","page":"Guide","title":"Derived Incidence Relations","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The incidence relations computable with the library are summarized in the table below. They include the initial incidence relation  in the first column of the table (connectivity of the first mesh), and the subsequently available incidence relations in the rest of the table. Some of these relations are defined for meshes derived from the initial mesh.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 0 -> 0 0 -> 1 0 -> 2 0 -> 3\n1 1 -> 0 ––– 1 -> 2 1 -> 3\n2 2 -> 0 2 -> 1 ––– 2 -> 3\n3 3 -> 0 3 -> 1 3 -> 2 –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"In general the relations below the diagonal require the calculation of derived meshes. The relations above the diagonal are obtained by the so-called transpose operation, and do not require the construction of new meshes. Also, the relations below the diagonal are of fixed size. That is the number of entities incident on a given entity is a fixed number that can be determined beforehand. An example is  the relation 3 rightarrow 2, where for the j-th cell the list consists of the faces bounding the cell.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"On the other hand, the relations above the diagonal are in general of variable length. For example the relation 2 rightarrow 3 represents the cells which are bounded by a face: so either 2 or 1 cells.","category":"page"},{"location":"guide/guide.html#Incidence-relations-d-\\rightarrow-0-1","page":"Guide","title":"Incidence relations d rightarrow 0","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The table below summarizes the incidence relations that represent  the initial meshes.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 0 -> 0 ––– ––– –––\n1 1 -> 0 ––– ––– –––\n2 2 -> 0 ––– ––– –––\n3 3 -> 0 ––– ––– –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"For instance, for a surface mesh the relation 2 rightarrow 0 is defined initially. The relations above that can be calculated with the skeleton function. So,  the skeleton of the surface mesh would consist of all the edges in the mesh, expressible as the incidence relation  1 rightarrow 0.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Note that the skeleton method constructs a derived mesh: the incidence relations in the column of the above table are therefore defined for related, but separate, meshes.","category":"page"},{"location":"guide/guide.html#Incidence-relations-d-\\rightarrow-d-1-1","page":"Guide","title":"Incidence relations d rightarrow d-1","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"This incidence relation provides for each shape the list of shapes by which the shape is bounded of manifold dimension lower by one. For example, for each triangular face (manifold dimension 2), the relationship would state the global numbers of edges (manifold dimension 1) by which the triangle face is bounded.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 ––– ––– ––– –––\n1 1 -> 0 ––– ––– –––\n2 ––– 2 -> 1 ––– –––\n3 ––– ––– 3 -> 2 –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The incidence  relation d rightarrow d-1 may be derived with the function boundedby, which operates on two shape collections: the shapes of dimension d and the facet shapes of dimension d-1.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The relationship 1  rightarrow 0 can be derived in two ways: from the incidence relation 2 rightarrow  0 by the skeleton function, or by the boundedby function applied to a shape collection of edges and  a shape collection of the vertices.","category":"page"},{"location":"guide/guide.html#Incidence-relations-d-\\rightarrow-d-2-1","page":"Guide","title":"Incidence relations d rightarrow d-2","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"This incidence relation provides for each shape the list of shapes by which the shape is \"bounded\" of manifold dimension lower by two. For example, for each triangular face (manifold dimension 2), the relationship would state the global numbers of vertices (manifold dimension 0) by which the triangle face is \"bounded\". The word \"bounded\" is in quotes because the relationship of bounding is very leaky: Clearly we do not cover most of the boundary, only the vertices.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Similar relationship can be derived for instance between tetrahedra and the edges (3 rightarrow 1). Again, the incidence relation is very leaky in that it provides cover for the edges of the tetrahedron.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 ––– ––– ––– –––\n1 ––– ––– ––– –––\n2 2 -> 0 ––– ––– –––\n3 ––– 3 -> 1 ––– –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The relationship 2  rightarrow 0 can be derived in two ways: from the incidence relation 3 rightarrow  0 by the skeleton function, or by the boundedby2 function applied to a shape collection of cells and  a shape collection of the edges.","category":"page"},{"location":"guide/guide.html#Incidence-relations-d_1-\\rightarrow-d_2,-where-d_1-\\lt-d_2-1","page":"Guide","title":"Incidence relations d_1 rightarrow d_2, where d_1 lt d_2","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"The relations above the diagonal of the table below are lists of shapes incident on lower-dimension shapes. These are computed from the incidence relations from the lower triangle of the table by the function increl_transpose.","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"Manif. dim. 0 1 2 3\n0 ––– 0 -> 1 0 -> 2 0 -> 3\n1 ––– ––– 1 -> 2 1 -> 3\n2 ––– ––– ––– 2 -> 3\n3 ––– ––– ––– –––","category":"page"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"No new meshes are needed to construct the upper triangle  of the incidence relations table. However, constructing the incidence relation  will still take a pass through the entire mesh. The incidence relations in the upper triangle of the table are all of variable arity: for instance the incidence relation 1 rightarrow 3 is the list of three-dimensional cells that share a given edge. Clearly the number of cells varies from edge to edge.","category":"page"},{"location":"guide/guide.html#Incidence-relations-d-\\rightarrow-d,-where-d-\\gt-1-1","page":"Guide","title":"Incidence relations d rightarrow d, where d gt 1","text":"","category":"section"},{"location":"guide/guide.html#","page":"Guide","title":"Guide","text":"These incidence relations do not fit the table referenced many times above. The definition of such a relation is not unique:  It needs to refer to a connecting shape. For instance, the relationship between faces,   2 rightarrow 2, needs to state through which shape the incidence occurs: is it through the common vertex? Is it through a common edge? Similarly, for cells the incidence relationship 3 rightarrow 3 will be different for the incidence to follow from a common vertex, a common edge, or a common face.","category":"page"},{"location":"index.html#MeshCore-Documentation-1","page":"Home","title":"MeshCore Documentation","text":"","category":"section"},{"location":"index.html#Conceptual-guide-1","page":"Home","title":"Conceptual guide","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"The concepts and ideas are described.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\n    \"guide/guide.md\",\n]\nDepth = 1","category":"page"},{"location":"index.html#Manual-1","page":"Home","title":"Manual","text":"","category":"section"},{"location":"index.html#","page":"Home","title":"Home","text":"The description of the types and of the functions.","category":"page"},{"location":"index.html#","page":"Home","title":"Home","text":"Pages = [\n    \"man/types.md\",\n    \"man/functions.md\",\n]\nDepth = 3","category":"page"},{"location":"man/types.html#Types-1","page":"Types","title":"Types","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"CurrentModule = MeshCore","category":"page"},{"location":"man/types.html#Geometry-1","page":"Types","title":"Geometry","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"Locations{N, T<:AbstractFloat}","category":"page"},{"location":"man/types.html#MeshCore.Locations","page":"Types","title":"MeshCore.Locations","text":"Locations{N, T}\n\nLocations of the vertices.\n\nN = number of coordinates, equal to the number of space dimensions,\nT = type of the individual coordinates (concrete subtype of AbstractFloat).\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#Shape-descriptors-1","page":"Types","title":"Shape descriptors","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"AbsShapeDesc\nNoSuchShapeDesc\nP1ShapeDesc\nL2ShapeDesc\nQ4ShapeDesc\nH8ShapeDesc\nT3ShapeDesc\nT4ShapeDesc","category":"page"},{"location":"man/types.html#MeshCore.AbsShapeDesc","page":"Types","title":"MeshCore.AbsShapeDesc","text":"AbsShapeDesc\n\nAbstract shape descriptor (simplex, or cuboid, of various manifold dimension)\n\nThe definitions of concrete types below define a set of shape descriptors, covering the usual element shapes: point, line segment, quadrilateral, hexahedron, and a similar hierarchy for the simplex elements: point, line segment, triangle, tetrahedron.\n\nThe concrete types of the shape descriptor will provide access to manifdim = manifold dimension of the shape (0, 1, 2, or 3), nvertices = number of vertices of the shape, n1storderv = number of first-order vertices for the shape, for instance     a 6-node triangle has 3 first-order vertices, nfacets = number of shapes on the boundary of this shape, facetdesc = shape descriptor of the shapes on the boundary of this shape, facets = definitions of the shapes on the boundary of this shape in terms     of local connectivity\n\nThe bit-type values are defined with the type parameters: MD is the manifold dimension, NV is the number of connected vertices, NF is the number of boundary facets, N1OV number of first-order vertices, FD is the descriptor of the facet (boundary shape).\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.NoSuchShapeDesc","page":"Types","title":"MeshCore.NoSuchShapeDesc","text":"NoSuchShapeDesc\n\nBase descriptor: no shape is of this description.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.P1ShapeDesc","page":"Types","title":"MeshCore.P1ShapeDesc","text":"P1ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a point shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.L2ShapeDesc","page":"Types","title":"MeshCore.L2ShapeDesc","text":"L2ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a line segment shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.Q4ShapeDesc","page":"Types","title":"MeshCore.Q4ShapeDesc","text":"Q4ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a quadrilateral shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.H8ShapeDesc","page":"Types","title":"MeshCore.H8ShapeDesc","text":"H8ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a hexahedral shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.T3ShapeDesc","page":"Types","title":"MeshCore.T3ShapeDesc","text":"T3ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a triangular shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#MeshCore.T4ShapeDesc","page":"Types","title":"MeshCore.T4ShapeDesc","text":"T4ShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nShape descriptor of a tetrahedral shape.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#Shape-collections-1","page":"Types","title":"Shape collections","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"ShapeColl{S <: AbsShapeDesc}","category":"page"},{"location":"man/types.html#MeshCore.ShapeColl","page":"Types","title":"MeshCore.ShapeColl","text":"ShapeColl{S <: AbsShapeDesc}\n\nThis is the type of a homogeneous collection of finite element shapes.\n\nS = shape descriptor: subtype of AbsShapeDesc.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#Attributes-1","page":"Types","title":"Attributes","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"AbsAttrib\nAttrib{F}<:AbsAttrib","category":"page"},{"location":"man/types.html#MeshCore.AbsAttrib","page":"Types","title":"MeshCore.AbsAttrib","text":"AbsAttrib\n\nAbstract type of attribute.\n\n\n\n\n\n","category":"type"},{"location":"man/types.html#Incidence-relations-1","page":"Types","title":"Incidence relations","text":"","category":"section"},{"location":"man/types.html#","page":"Types","title":"Types","text":"IncRel{LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}","category":"page"},{"location":"man/types.html#MeshCore.IncRel","page":"Types","title":"MeshCore.IncRel","text":"IncRel{LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\n\nIncidence relation expressing connectivity between an entity of the shape on the left and a list of entities of the shape on the right.\n\n\n\n\n\n","category":"type"},{"location":"man/functions.html#Functions-1","page":"Functions","title":"Functions","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"CurrentModule = MeshCore","category":"page"},{"location":"man/functions.html#Geometry-1","page":"Functions","title":"Geometry","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"Locations(xyz::Array{T, 2}) where {T}\nnlocations(loc::Locations{N, T}) where {N, T}\nnspacedims(loc::Locations{N, T}) where {N, T}\ncoordinatetype(loc::Locations{N, T}) where {N, T}\ncoordinates(loc::Locations{N, T}, i::Int64) where {N, T}\ncoordinates(loc::Locations{N, T}, I::SVector) where {N, T}","category":"page"},{"location":"man/functions.html#MeshCore.Locations-Union{Tuple{Array{T,2}}, Tuple{T}} where T","page":"Functions","title":"MeshCore.Locations","text":"Locations(xyz::Array{T, 2}) where {T}\n\nConstruct from a matrix (2D array), one vertex per row.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.nlocations-Union{Tuple{MeshCore.Locations{N,T}}, Tuple{T}, Tuple{N}} where T where N","page":"Functions","title":"MeshCore.nlocations","text":"nlocations(loc::Locations{N, T}) where {N, T}\n\nRetrieve number of Locations.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.nspacedims-Union{Tuple{MeshCore.Locations{N,T}}, Tuple{T}, Tuple{N}} where T where N","page":"Functions","title":"MeshCore.nspacedims","text":"nspacedims(loc::Locations{N, T}) where {N, T}\n\nRetrieve the number of space dimensions.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.coordinatetype-Union{Tuple{MeshCore.Locations{N,T}}, Tuple{T}, Tuple{N}} where T where N","page":"Functions","title":"MeshCore.coordinatetype","text":"coordinatetype(loc::Locations{N, T}) where {N, T}\n\nRetrieve type of individual coordinates.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.coordinates-Union{Tuple{T}, Tuple{N}, Tuple{MeshCore.Locations{N,T},Int64}} where T where N","page":"Functions","title":"MeshCore.coordinates","text":"coordinates(Locations::Locations{N, T}, i::I) where {N, T, I<:Int}\n\nRetrieve coordinates of a single vertex.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.coordinates-Union{Tuple{T}, Tuple{N}, Tuple{MeshCore.Locations{N,T},StaticArrays.SArray{Tuple{S},T,1,S} where T where S}} where T where N","page":"Functions","title":"MeshCore.coordinates","text":"coordinates(loc::Locations{N, T}, I::SVector) where {N, T}\n\nAccess coordinates of selected Locations.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Access-to-geometry-from-an-attribute-1","page":"Functions","title":"Access to geometry from an attribute","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"(la::LocAccess)(j::Int64)\nlocations(la::LocAccess)","category":"page"},{"location":"man/functions.html#MeshCore.locations-Tuple{MeshCore.LocAccess}","page":"Functions","title":"MeshCore.locations","text":"locations(la::LocAccess)\n\nRetrieve the data structure of the locations.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Shapes-1","page":"Functions","title":"Shapes","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"ShapeColl(shapedesc::S, nshapes::Int64) where {S <: AbsShapeDesc}\nShapeColl(shapedesc::S, nshapes::Int64, d::Dict) where {S <: AbsShapeDesc}\nShapeColl(shapedesc::S, nshapes::Int64, s::String) where {S <: AbsShapeDesc}\nshapedesc\nnshapes\nmanifdim\nnvertices\nfacetdesc\nnfacets\nfacetconnectivity\nedgetdesc\nnedgets\nedgetconnectivity\nn1storderv\nnshifts\nattribute(shapes::ShapeColl, s::Symbol)","category":"page"},{"location":"man/functions.html#MeshCore.ShapeColl-Union{Tuple{S}, Tuple{S,Int64}} where S<:MeshCore.AbsShapeDesc","page":"Functions","title":"MeshCore.ShapeColl","text":"ShapeColl(shapedesc::S, nshapes::Int64) where {S <: AbsShapeDesc}\n\nSet up new shape collection with an empty dictionary of attributes and a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.ShapeColl-Union{Tuple{S}, Tuple{S,Int64,Dict}} where S<:MeshCore.AbsShapeDesc","page":"Functions","title":"MeshCore.ShapeColl","text":"ShapeColl(shapedesc::S, nshapes::Int64, d::Dict{Symbol, Any}) where {S <: AbsShapeDesc}\n\nSet up new shape collection with a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.ShapeColl-Union{Tuple{S}, Tuple{S,Int64,String}} where S<:MeshCore.AbsShapeDesc","page":"Functions","title":"MeshCore.ShapeColl","text":"ShapeColl(shapedesc::S, nshapes::Int64, d::Dict{Symbol, Any}) where {S <: AbsShapeDesc}\n\nSet up new shape collection with an empty dictionary of attributes.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.shapedesc","page":"Functions","title":"MeshCore.shapedesc","text":"shapedesc(shapes::ShapeColl)\n\nRetrieve the shape descriptor.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nshapes","page":"Functions","title":"MeshCore.nshapes","text":"nshapes(shapes::ShapeColl)\n\nNumber of shapes in the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.manifdim","page":"Functions","title":"MeshCore.manifdim","text":"manifdim(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nWhat is the manifold dimension of this shape?\n\n\n\n\n\nmanifdim(shapes::ShapeColl)\n\nRetrieve the manifold dimension of the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nvertices","page":"Functions","title":"MeshCore.nvertices","text":"nvertices(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nHow many vertices does the shape connect?\n\n\n\n\n\nnvertices(shapes::ShapeColl)\n\nRetrieve the number of vertices per shape.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.facetdesc","page":"Functions","title":"MeshCore.facetdesc","text":"facetdesc(shapes::ShapeColl)\n\nRetrieve the shape type of the boundary facet.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nfacets","page":"Functions","title":"MeshCore.nfacets","text":"nfacets(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nHow many facets bound the shape?\n\n\n\n\n\nnfacets(shapes::ShapeColl)\n\nRetrieve the number of boundary facets per shape.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.facetconnectivity","page":"Functions","title":"MeshCore.facetconnectivity","text":"facetconnectivity(shapes::ShapeColl, j::Int64)\n\nRetrieve connectivity of the j-th facet shape of the i-th shape from the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.edgetdesc","page":"Functions","title":"MeshCore.edgetdesc","text":"edgetdesc(shapes::ShapeColl)\n\nRetrieve the shape type of the boundary edget.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nedgets","page":"Functions","title":"MeshCore.nedgets","text":"nedgets(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nHow many edgets bound the shape?\n\n\n\n\n\nnedgets(shapes::ShapeColl)\n\nRetrieve the number of boundary edgets per shape.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.edgetconnectivity","page":"Functions","title":"MeshCore.edgetconnectivity","text":"edgetconnectivity(shapes::ShapeColl, j::Int64)\n\nRetrieve connectivity of the j-th edget shape of the i-th shape from the collection.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.n1storderv","page":"Functions","title":"MeshCore.n1storderv","text":"n1storderv(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nHow many 1st-order vertices are there per shape?\n\nFor instance, for hexahedra each shape has 8 1st-order vertices.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nshifts","page":"Functions","title":"MeshCore.nshifts","text":"nshifts(sd::AbsShapeDesc{MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}) where {MD, NV, NF, FD, NE, ED, N1OV, NSHIFTS}\n\nHow many circular shifts should be tried to figure out the orientation (sense)?\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#Incidence-relations-1","page":"Functions","title":"Incidence relations","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"IncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, v::Vector{T}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, T}\nIncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, data::Matrix{MT}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\nnrelations\nnentities\n(ir::IncRel)(j::IT, k::IT) where {IT}\n(ir::IncRelFixed)(j::IT) where {IT}","category":"page"},{"location":"man/functions.html#MeshCore.IncRel-Union{Tuple{T}, Tuple{RIGHT}, Tuple{LEFT}, Tuple{MeshCore.ShapeColl{LEFT},MeshCore.ShapeColl{RIGHT},Array{T,1}}} where T where RIGHT<:MeshCore.AbsShapeDesc where LEFT<:MeshCore.AbsShapeDesc","page":"Functions","title":"MeshCore.IncRel","text":"IncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, data::Matrix{MT}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\n\nConvenience constructor with a vector of vectors and a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.IncRel-Union{Tuple{MT}, Tuple{RIGHT}, Tuple{LEFT}, Tuple{MeshCore.ShapeColl{LEFT},MeshCore.ShapeColl{RIGHT},Array{MT,2}}} where MT where RIGHT<:MeshCore.AbsShapeDesc where LEFT<:MeshCore.AbsShapeDesc","page":"Functions","title":"MeshCore.IncRel","text":"IncRel(left::ShapeColl{LEFT}, right::ShapeColl{RIGHT}, data::Matrix{MT}) where {LEFT<:AbsShapeDesc, RIGHT<:AbsShapeDesc, MT}\n\nConvenience constructor supplying a matrix instead of a vector of vectors and a default name.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.nrelations","page":"Functions","title":"MeshCore.nrelations","text":"nrelations(ir::IncRel)\n\nNumber of individual relations in the incidence relation.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#MeshCore.nentities","page":"Functions","title":"MeshCore.nentities","text":"nentities(ir::IncRel, j::Int64)\n\nNumber of individual entities in the j-th relation in the incidence relation.\n\n\n\n\n\n","category":"function"},{"location":"man/functions.html#Relations-below-the-diagonal-1","page":"Functions","title":"Relations below the diagonal","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"skeleton(mesh::IncRel; options...)\nboundary(mesh::IncRel)\nboundedby(mesh::IncRel, fmesh::IncRel)\nboundedby2(mesh::IncRel, emesh::IncRel)","category":"page"},{"location":"man/functions.html#MeshCore.skeleton-Tuple{MeshCore.IncRel}","page":"Functions","title":"MeshCore.skeleton","text":"skeleton(mesh::IncRel; options...)\n\nCompute the skeleton of the mesh.\n\nThis computes a new incidence relation from an existing incidence relation. \n\nOptions\n\nboundaryonly: include in the skeleton only shapes on the boundary   of the input collection, true or false (default).\n\nReturns\n\nIncidence relation for the skeleton mesh. The left shape collection consists of facets (shapes of manifold dimension one less than the manifold dimension of the shapes themselves). The right shape collection is the same as for the input.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.boundary-Tuple{MeshCore.IncRel}","page":"Functions","title":"MeshCore.boundary","text":"boundary(mesh::IncRel)\n\nCompute the incidence relation for the boundary of the collection on input.\n\nThis is a convenience version of the skeleton function.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.boundedby-Tuple{MeshCore.IncRel,MeshCore.IncRel}","page":"Functions","title":"MeshCore.boundedby","text":"boundedby(mesh::IncRel, fmesh::IncRel)\n\nCompute the incidence relation d -> d-1 for d-dimensional shapes.\n\nIn other words, this is the incidence between shapes and the shapes that bound these shapes (facets). For tetrahedra as the shapes, the incidence relation lists the numbers of the faces that bound each individual tetrahedron. The resulting left shape is of the same shape description as in the mesh.\n\nnote: Note\nThe numbers of the facets are signed: positive when the facet bounds the shape in the sense in which it is defined by the shape as oriented with an outer normal; negative otherwise. The sense is defined by the numbering of the 1st-order vertices of the facet shape.\n\nReturns\n\nIncidence relation for the bounded-by mesh. The left shape collection is the same as for the mesh, the right shape collection is for the facets (shapes of manifold dimension one less than the manifold dimension of the shapes themselves).\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#MeshCore.boundedby2-Tuple{MeshCore.IncRel,MeshCore.IncRel}","page":"Functions","title":"MeshCore.boundedby2","text":"boundedby2(mesh::IncRel, emesh::IncRel)\n\nCompute the incidence relation d -> d-2 for d-dimensional shapes.\n\nIn other words, this is the incidence between shapes and the shapes that \"bound\" the boundaries of these shapes (i. e. edgets). For tetrahedra as the shapes, the incidence relation lists the numbers of the edges that \"bound\" each individual tetrahedron. The resulting shape is of the same shape description as the shapes on input.\n\nnote: Note\nThe numbers of the edgets are signed: positive when the edget bounds the shape in the sense in which it is defined by the shape as oriented with an outer normal; negative otherwise. The sense is defined by the numbering of the 1st-order vertices of the edget shape.\n\nReturns\n\nIncidence relation for the \"bounded-by\" mesh. The left shape collection is the same as for the mesh, the right shape collection is for the edgets (shapes of manifold dimension two less than the manifold dimension of the shapes themselves).\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Relations-above-the-diagonal-1","page":"Functions","title":"Relations above the diagonal","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"transpose(mesh::IncRel)","category":"page"},{"location":"man/functions.html#MeshCore.transpose-Tuple{MeshCore.IncRel}","page":"Functions","title":"MeshCore.transpose","text":"transpose(mesh::IncRel)\n\nCompute the incidence relation d1 -> d2, where d2 >= d1.\n\nThis only makes sense for d2 >= 0. For d2=1 we get for each vertex the list of edges connected to the vertex, and analogously faces and cells for d=2 and d=3.\n\nReturns\n\nIncidence relation for the transposed mesh. The left and right shape collection are swapped in the output relative to the input.\n\n\n\n\n\n","category":"method"},{"location":"man/functions.html#Index-1","page":"Functions","title":"Index","text":"","category":"section"},{"location":"man/functions.html#","page":"Functions","title":"Functions","text":"","category":"page"}]
}
